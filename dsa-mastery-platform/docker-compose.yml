version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://43.204.112.237:5001
    depends_on:
      - backend
    networks:
      - dsa-network

  # Backend service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "5001:5001"
    environment:
      # Database Configuration
      - MONGODB_URI=mongodb+srv://shivamviswakarma:ywA4WijhVoegeViP@cluster0.sfhwddx.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      - MONGO_USERNAME=shivamviswakarma
      - MONGO_PASSWORD=ywA4WijhVoegeViP
      
      # JWT Configuration
      - JWT_SECRET=d2304e7b77c01b693e4d76a5fa9af4c18fc3804163c5d01df5ffe4195888ffb7255e79684bdd6b649c56b2e28c06e04236f30e8999e7beb6bcfd78d9bf9ea836
      - JWT_EXPIRES_IN=7d
      
      # Server Configuration
      - PORT=5001
      - NODE_ENV=production
      
      # CORS Configuration
      - CORS_ORIGIN=http://43.204.112.237:3000
      
      # Frontend Configuration
      - NEXT_PUBLIC_API_URL=http://43.204.112.237:5001
      
      # Redis Configuration
      - REDIS_URL=redis://redis:6379
      
      # Email Configuration
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=your_email@gmail.com
      - SMTP_PASS=your_app_password
      
      # Cloudinary Configuration
      - CLOUDINARY_CLOUD_NAME=your_cloud_name
      - CLOUDINARY_API_KEY=your_api_key
      - CLOUDINARY_API_SECRET=your_api_secret
    depends_on:
      - redis
    networks:
      - dsa-network

  # Redis service (for caching and sessions)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dsa-network

volumes:
  redis_data:

networks:
  dsa-network:
    driver: bridge
